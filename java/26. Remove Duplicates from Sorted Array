Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the new length.

#left初始为1，只有当后面的数大于前面时，把后面的数拷贝到left处，并将left+1，因此可以保证left位置一定是数组中第left大（或第left个不同）的数。
#当数组中没有重复的数是，循环只是不断地将自己赋给自己。

public class Solution {
    public int removeDuplicates(int[] nums) {
        int l = nums.length;
        int left = 1;
        for(int i = 1; i < l; i++) {
            if(nums[i] != nums[i - 1]) {
                nums[left++] = nums[i];
            }
        }
        return left;
    }
}
