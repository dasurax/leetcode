Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0

# 折半查找

public class Solution {
    public int searchInsert(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        int mid;
        while(left <= right) {  // 判断条件为<的话，循环结束还需比较left指向元素和target的大小，因此用<=。
            mid = left + (right - left) / 2;  //注意这里如果使用mid = (right + left) / 2，可能会有溢出问题。
            if(nums[mid] < target) {
                left = mid + 1;
            }
            else if(nums[mid] > target) {
                right = mid - 1;
            }
            else
                return mid;
        }
        return left;
    }
}
