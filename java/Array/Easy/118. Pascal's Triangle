Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

# 第二种方法类似于Pascal's Triangle II

public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> lists = new ArrayList();
        if(numRows == 0)
            return lists;
        List<Integer> list = new ArrayList();
        list.add(1);
        lists.add(list);
        for(int i = 1; i < numRows; i++) {
            list = new ArrayList();
            list.add(1);
            List<Integer> pre = lists.get(i - 1);
            for(int j = 0; j < pre.size() - 1; j++)
                list.add(pre.get(j) + pre.get(j + 1));
            list.add(1);
            lists.add(list);
        }
        return lists;
    }
}

public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> allrows = new ArrayList<List<Integer>>();
        ArrayList<Integer> row = new ArrayList<Integer>();
        for(int i=0;i<numRows;i++)
        {
            row.add(0, 1);
            for(int j=1;j<row.size()-1;j++)
              row.set(j, row.get(j)+row.get(j+1));
            allrows.add(new ArrayList<Integer>(row));
        }
        return allrows;
    }
}
