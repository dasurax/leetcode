Given an index k, return the kth row of the Pascal's triangle. //杨辉三角

For example, given k = 3,
Return [1,3,3,1].

//原思路：使用阶乘，但是阶乘会导致中间结果太大而溢出，因此不能使用阶乘来计算。

//使用两重循环来迭代计算：利用上一行的结果计算下一行。
public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> row = new ArrayList<>();
        for(int j = 0; j < rowIndex + 1; j++) {
            row.add(0, 1);
            for(int i = 1; i < j; i++) {
                row.set(i, row.get(i) + row.get(i + 1));
            }
        }
        return row;
    }
}
