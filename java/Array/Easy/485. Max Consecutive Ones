Given a binary array, find the maximum number of consecutive 1s in this array.

Example 1:
Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.
Note:

The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000

# 数1的个数，或者计算两个0之间的差值

public class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int count = 0, max = 0, l = nums.length;
        for(int i: nums) {
            if(i == 0) {
                max = Math.max(count, max); 
                count = 0;
            } else {
                count++;
            }
        }
        return max = Math.max(count, max); 
    }
}

public class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int left = -1, max = 0, l = nums.length;
        for(int i = 0; i < l; i++) {
            if(nums[i] == 0) {
                max = Math.max(i - left - 1, max); 
                left = i;
            }
        }
        return max = Math.max(l - left - 1, max); 
    }
}
