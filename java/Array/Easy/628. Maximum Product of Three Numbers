Given an integer array, find three numbers whose product is maximum and output the maximum product.

Example 1:
Input: [1,2,3]
Output: 6
Example 2:
Input: [1,2,3,4]
Output: 24
Note:
The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].
Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.

# 关键点：Math.max(max1 * max2 * max3, min1 * min2 * max1)，即最大乘积由这两个乘积决定。

public class Solution {
    public int maximumProduct(int[] nums) {
        int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE;
        int min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;
        int l = nums.length;
        for(int num: nums) {
            if(num > max3) {  // 先和max3比然后max2，max1,而不是先和max1比然后max2，max3，可以减少条件判断次数。
                if(num > max2) {
                    max3 = max2;
                    if(num > max1) {
                        max2 = max1;
                        max1 = num;
                    } else {
                        max2 = num;
                    }
                } else {
                    max3 = num;
                }
            }
            if(num < min2) {
                if(num < min1) {
                    min2 = min1;
                    min1 = num;
                } else {
                    min2 = num;
                }
            }
        }
        return Math.max(max1 * max2 * max3, min1 * min2 * max1);
    }
}
