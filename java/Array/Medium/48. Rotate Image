You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Note:
You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example 1:

Given input matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

rotate the input matrix in-place such that it becomes:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]
Example 2:

Given input matrix =
[
  [ 5, 1, 9,11],
  [ 2, 4, 8,10],
  [13, 3, 6, 7],
  [15,14,12,16]
], 

rotate the input matrix in-place such that it becomes:
[
  [15,13, 2, 5],
  [14, 3, 4, 1],
  [12, 6, 8, 9],
  [16, 7,10,11]
]

# 方法一，从最外圈开始从外到内对每一圈进行旋转。对一圈进行旋转时，如上例，先把15,5,11,16旋转，再把旁边的13,1,10,12旋转，依此类推。
# 只需主要下标的计算。

class Solution {
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        if(n <= 1)
            return;
        int tmp1, tmp2, left = 0, right = n - 1, top = 0, bottom = n - 1;
        for(int c = 0; c < n / 2; c++) {
            for(int i = 0; i < n - 1 - 2 * c; i++) {
                tmp1 = matrix[top+i][right];
                matrix[top+i][right] = matrix[top][left+i];
                tmp2 = matrix[bottom][right-i];
                matrix[bottom][right-i] = tmp1;
                tmp1 = matrix[bottom-i][left];
                matrix[bottom-i][left] = tmp2;
                matrix[top][left+i] = tmp1;
            }
            left++; top++; right--; bottom--;
        }
    }
}

# 在Spiral Matrix II中方法二提到了一种旋转矩阵的方法，即先将二维数组按一维进行翻转，第二步实际上是对矩阵进行了转置，
# 即只需交换matrix[i][j]和matrix[j][i]即可。
# 先转置，再进行翻转也可以得到最终结果。
#
  clockwise rotate
  first reverse up to down, then swap the symmetry 
  1 2 3     7 8 9     7 4 1
  4 5 6  => 4 5 6  => 8 5 2
  7 8 9     1 2 3     9 6 3
#

class Solution {
    public void rotate(int[][] matrix) {
        int s = 0, e = matrix.length - 1;
        while(s < e){
            int[] temp = matrix[s];
            matrix[s] = matrix[e];
            matrix[e] = temp;
            s++; e--;
        }

        for(int i = 0; i < matrix.length; i++){
            for(int j = i+1; j < matrix[i].length; j++){
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
    }
}
