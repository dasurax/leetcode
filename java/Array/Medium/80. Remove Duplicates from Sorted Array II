Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array nums = [1,1,1,2,2,3],

Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. 
It doesn't matter what you leave beyond the new length.

# 只在count<3时保存新的结果，意味着同一个数出现多次时只有前两个被保留。

class Solution {
    public int removeDuplicates(int[] nums) {
        int count = 1, l = nums.length, total = 1;
        if(l == 0)
            return 0;
        int left = 1;
        for(int i = 1; i < l; i++) {
            if(nums[i] == nums[i - 1]) {
                count++;
            } else {
                count = 1;
            }
            if(count < 3) {
                total++;
                nums[left++] = nums[i];
            }
        }
        return total;
    }
}

# 简化版本，将2替换为k，可以解决most k次的问题。

class Solution {
    public int removeDuplicates(int[] nums) {
        int i = 0;
        for(int n: nums) {
            if(i < 2 || n > nums[i - 2])
                nums[i++] = n;
        }
        return i;
    }
}
