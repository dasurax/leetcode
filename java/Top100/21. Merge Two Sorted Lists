https://leetcode.com/problems/merge-two-sorted-lists/description/

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

# 迭代：

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0), tmp = dummy;
        while(l1 != null && l2 != null) {
            if(l1.val < l2.val) {
                tmp.next = l1;
                l1 = l1.next;
            } else {
                tmp.next = l2;
                l2 = l2.next;
            }
            tmp = tmp.next;
        }
        if(l1 == null)
            tmp.next = l2;
        else
            tmp.next = l1;
        return dummy.next;
    }
}

# in place:

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0), cur, l1tmp, tmp;
        dummy.next = l1;
        cur = dummy;
        while(l1 != null && l2 != null) {
            if(l1.val < l2.val) {
                l1 = l1.next;
            } else {
                l1tmp = cur.next;
                cur.next = l2;
                l1 = l2.next;
                l2 = l1tmp;
            }
            cur = cur.next;
        }
        if(l1 == null)
            cur.next = l2;
        else
            cur.next = l1;
        return dummy.next;
    }
}
