https://leetcode.com/problems/hamming-distance/description/

The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.

# 异或之后计算为1的bit的个数。

class Solution {
    public int hammingDistance(int x, int y) {
        if(x == y) return 0;
        int xor = x ^ y, c = 0;
        while(xor > 0) {
            c += xor & 1; // 相当于%2
            xor >>= 1;
        }
        return c;
    }
}
